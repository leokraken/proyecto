@model SAREM.Web.Models.Consulta

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Admin.cshtml";
}

<h2>Crear Consulta</h2>
<hr />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
       
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <label class="control-label col-md-2">Nro de Documento Paciente:</label>
           
            <div class="col-md-10">
                @Html.EditorFor(model => model.pacienteId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pacienteId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Orígen:</label>
            <div class="col-md-10">
                @Html.DropDownListFor(
                        model => model.localID,
                        Model.local.Select(l => new SelectListItem
                        {
                            Text = l.nombre,
                            Value = l.LocalID.ToString()
                        }),
                 "Seleccione un Orígen", new { @class = "origen_change" })
                @Html.ValidationMessageFor(model => model.localID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="especialidades" style="display:none">
            <div class="form-group">
            <label class="control-label col-md-2">Especialidad:</label>
            <div class="col-md-10">
               
                @Html.DropDownList("Especial", new SelectList(string.Empty, "Value", "Text"), "Seleccione una Especialidad", new { style = "width:250px", @class = "dropdown1" })
            </div>
            </div>
         </div>
        <div id="medicos" style="display:none">
            <div class="form-group">
            <label class="control-label col-md-2">Médico:</label>
            <div class="col-md-10">
                @Html.DropDownList("Medico", new SelectList(string.Empty, "Value", "Text"), "Seleccione un Médico", new { style = "width:250px", @class = "dropdown1" })
            </div>
            </div>
         </div>
        <div class="form-group">
            <label class="control-label col-md-2">Fecha Inicio:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.fecha_inicio, new { htmlAttributes = new { @class = "form-control datetimepicker", placeholder = "Seleccione una fecha.." } })
                @Html.ValidationMessageFor(model => model.fecha_inicio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Fecha Fin:</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.fecha_fin, new { htmlAttributes = new { @class = "form-control datetimepicker", placeholder = "Seleccione una fecha.." } })
                @Html.ValidationMessageFor(model => model.fecha_fin, "", new { @class = "text-danger" })
            </div>
        </div>
       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Crear" class="btn btn-default" />
            </div>
        </div>
       
    </div>
}

<div>
    @Html.ActionLink("Volver a Inicio", "Index")
</div>
@Scripts.Render("~/bundles/jquery")

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

    <script>
    $(document).ready(function () {


        $(".origen_change").change(function () {

            if ($(".origen_change option:selected").index() != 0) {

                $("#medicos").css("display", "none");
                $("#Especial").empty().append('<option value="0">Seleccione una Especialidad</option>');

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetEspecialidades", "Consulta")',
                    dataType: 'json',
                    data: { idLocalidad: $(this).find('option:selected').val() },
                    cache: false,
                    success: function (data) {
                        //Fill div with results
                        // states contains the JSON formatted list
                        // of states passed from the controller

                        $.each(data, function (i, dato) {
                            $("#Especial").append('<option value="' + dato.Value + '">' +
                                 dato.Text + '</option>');
                            // here we are adding option for States

                        });

                        $("#especialidades").css("display", "block");
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });
            }
              });

        $("#Especial").change(function () {
            if ($("#Especial option:selected").index() != 0) {
                $("#Medico").empty().append('<option value="0">Seleccione un Médico</option>');
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetMedicos", "Consulta")',
                    dataType: 'json',
                    data: { idEspecialidad: $(this).find('option:selected').val() },
                    cache: false,
                    success: function (data) {
                        //Fill div with results
                        // states contains the JSON formatted list
                        // of states passed from the controller

                        $.each(data, function (i, dato) {
                            $("#Medico").append('<option value="' + dato.Value + '">' +
                                 dato.Text + '</option>');
                            // here we are adding option for States

                        });

                        $("#medicos").css("display", "block");
                    },
                    error: function (ex) {
                        alert('Failed to retrieve states.' + ex);
                    }
                });

            }
              });



              $(function () {
                  $('.datetimepicker').datetimepicker();

              });
          });
    </script>

   
